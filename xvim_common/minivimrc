let g:tex_stylish = 1
let g:tex_conceal = ''
let g:tex_flavor = 'latex'
let g:tex_isk='48-57,a-z,A-Z,192-255'

"" let g:vimtex_complete_img_use_tail = 1
"" let g:vimtex_imaps_leader = '\|'
"" let g:vimtex_index_mode=4
"" let g:vimtex_index_split_pos = 'full'

let g:vimtex_view_method = 'zathura'
let g:vimtex_view_use_temp_files=1
let g:vimtex_view_forward_search_on_start = 1

" let g:vimtex_view_general_viewer = 'okular'
" let g:vimtex_view_general_options = '--unique file:@pdf\#src:@line@tex'
" let g:vimtex_view_general_options_latexmk = '--unique'

" let g:vimtex_complete_close_braces = 1
" let g:vimtex_index_resize = 1
let g:vimtex_disable_recursive_main_file_detection = 1
let g:vimtex_fold_enabled = 1
let g:vimtex_format_enabled = 1
let g:vimtex_quickfix_method='pplatex'
let g:vimtex_quickfix_open_on_warning = 0
" " let g:vimtex_toc_fold = 1
" let g:vimtex_toc_hotkeys = {'enabled' : 1}
" let g:vimtex_view_automatic = 0
let g:vimtex_quickfix_mode=1
let g:vimtex_toc_refresh_always=0

" let g:vimtex_syntax_minted = [
"             \ {
"             \   'lang' : 'c',
"             \ },
"             \ {
"             \   'lang' : 'cpp',
"             \   'environments' : ['cppcode', 'cppcode_test'],
"             \ },
"             \ {
"             \   'lang' : 'csharp',
"             \   'syntax' : 'cs'
"             \ },
"             \ {
"             \   'lang' : 'python',
"             \   'ignore' : [
"             \     'pythonEscape',
"             \     'pythonBEscape',
"             \     ],
"             \ }
"             \]

augroup vimtex
	autocmd!
	autocmd BufWritePost *.tex call vimtex#labels#refresh()
	autocmd BufWritePost *.tex call vimtex#toc#refresh()
augroup END

augroup vimtex_event_1
	au!
	au User VimtexEventQuit     call vimtex#compiler#clean(0)
	" au User VimtexEventInitPost call vimtex#compiler#compile()
augroup END

" Close viewers on quit
function! CloseViewers()
	if executable('xdotool') && exists('b:vimtex')
				\ && exists('b:vimtex.viewer') && b:vimtex.viewer.xwin_id > 0
		call system('xdotool windowclose '. b:vimtex.viewer.xwin_id)
	endif
endfunction

augroup vimtex_event_2
	au!
	au User VimtexEventQuit call CloseViewers()
augroup END

if has('nvim')
	let g:vimtex_compiler_progname = 'nvr'
endif

" \ 'build_dir' : 'build_dir',
let g:vimtex_compiler_latexmk = {
			\ 'options' : [
			\   '-verbose',
			\   '-shell-escape',
			\   '-bibtex',
			\   '-file-line-error',
			\   '-synctex=1',
			\   '-interaction=nonstopmode',
			\ ],
			\}

let g:vimtex_doc_handlers = ['MyHandler']
function! MyHandler(context)
	call vimtex#doc#make_selection(a:context)
	if !empty(a:context.selected)
		execute '!texdoc' a:context.selected '&'
	endif
	return 1
endfunction

let g:vimtex_indent_on_ampersands = 1

nmap <leader>ac <Plug>(vimtex-cmd-create)
xmap <leader>ac <Plug>(vimtex-cmd-create)

" let g:vimtex_compiler_latexmk_engines = {
"             \ '_'                : '-lualatex',
"             \ 'pdflatex'         : '-pdf',
"             \ 'lualatex'         : '-lualatex',
"             \ 'xelatex'          : '-xelatex',
"             \ 'context (pdftex)' : '-pdf -pdflatex=texexec',
"             \ 'context (luatex)' : '-pdf -pdflatex=context',
"             \ 'context (xetex)'  : '-pdf -pdflatex=''texexec --xtx''',
"             \}

