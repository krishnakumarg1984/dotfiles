set nocompatible
set surround
filetype on
filetype plugin indent on
syntax on
set spelllang=en_gb
syntax spell toplevel
"set spell                           " Spell checking on
set undofile
set undolevels=1000
set undoreload=10000            " Maximum number lines to save for undo on a buffer reload
set history=1000                " store lots of :cmdline history
set incsearch                   " search as characters are entered
set backspace=indent,eol,start  " Make backspace behave in a sane manner.

set noshowmatch                 " when on a [{(, highlight the matching )}]
set cpoptions-=m                " Highlight when CursorMoved
set matchpairs+=<:>             " Highlight <>
set matchtime=1
set hlsearch                    " highlight search matches
nmap <leader><space> ;nohls<CR>
set expandtab                  " Convert all TAB characters in the file to spaces
set mouse=a
set number                     " Visible line numbering
autocmd FocusLost * :set number
autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber
autocmd CursorMoved * :set relativenumber

set cursorline                 " highlight current line
set scrollbind
set cursorbind

" Don't try to highlight lines longer than 1000 characters
set synmaxcol=300   "Boost performance in rendering long lines

" Make ESC respond faster
" Lower the delay of escaping out of other modes
" keycode times out fast, mapping times out in a bit more time
set ttimeout
set ttimeoutlen=0
set timeout
set timeoutlen=1000

set visualbell               " Use visual bell instead of beeping
set t_vb=
set nomodeline               " Don't parse modelines because of vim modeline vulnerability

set encoding=utf-8           " Default encoding for saving and reading file
scriptencoding utfs8

set clipboard=unnamed,unnamedplus,autoselect,exclude:cons\\\\|linux
set iskeyword-=.                    " '.' is an end of word designator
set iskeyword-=#                    " '#' is an end of word designator
set iskeyword-=-                    " '-' is an end of word designator
set iskeyword-=!                    " '!' is an end of word designator

" set autochdir
set autowrite                       " Automatically write a file when leaving a modified buffer
set autoread                        " Autoread when a file is changed from outside

set viewoptions=folds,options,cursor,unix,slash " Better Unix / Windows compatibility

set fileformat=unix          " Default fileformat
set fileformats=unix,dos,mac

" Enable virtualedit in visual block mode
set virtualedit=all

set hidden      " Allow changing buffer without saving it first

set infercase   " Ignore case on insert completion
set ignorecase  " Ignore case search for normal letters
set smartcase   " Do case-sensitive search if pattern contains upper case letters

" Default indent settings
set tabstop=4 shiftwidth=4
set softtabstop=4
set smarttab

set shiftround  " Round indent by shiftwidth
set expandtab   " Expand tab to space

set foldmethod=indent   " Fold by indent
set foldlevel=1         " Starting fold level
set foldnestmax=20      " Deepest fold is 20 levels
set foldlevelstart=99   " Open all folds by default
set nofoldenable        " Disable fold by default

set foldmethod=indent   " Fold by indent
set foldlevel=1         " Starting fold level
set foldnestmax=20      " Deepest fold is 20 levels
set foldlevelstart=99   " Open all folds by default
set nofoldenable        " Disable fold by default

" Turn off swapfile and backup
set noswapfile
set nobackup
set nowritebackup
set noundofile

set scrolloff=3               " Minimal number of screen lines to keep above and below the cursor
set sidescroll=3              " The minimal number of columns to scroll horizontally
set sidescrolloff=5           " The minimal number of screen columns to keep to the left and to the right of the cursor

set listchars+=conceal:^
set conceallevel=1 concealcursor=i
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
" Shortcut to rapidly toggle `set list`
nnoremap <leader>l :set list!<CR>

hi link HelpBar Normal
hi link HelpStar Normal

" Wrap conditions
set whichwrap+=h,l,<,>,[,],b,s,~
set nowrap

set textwidth=100

set linebreak                   " Wrap lines at convenient point
let &showbreak='↪ '
set breakat=\ \ ;:,!?
set breakindent

set cmdheight=2                 " Height of command-line (easy-readable)

" Completion settings in insert mode
set completeopt=longest,menuone
set complete=.,w,b,u,t,i,kspell ". till i is the default. . = current buffer. w  = any other windows, b = any other buffers opened, u = unopened buffers, t = tags, i = current and included files
"kspell = k means also look in the dictionary, kspell is the same, but only
"look up when spell-check is enabled

set ttyfast
set pumheight=20                " Set popup menu max height

set wildmode=list:longest,full
" Ignore the following stuff when tab completing
set wildignore+=.hg,.git,.svn,*.o,*.obj,*.pyc,*.luac,*.jpg,*.jpeg,*.png,*.gif,*.bmp,*.pdf,*.class,*.dmg,*.DS_Store,*.lnk,*.ini,*.dats

"Adjust window size of preview and help
set previewheight=8
set helpheight=12

set nostartofline               " The cursor is kept in the same column (if possible)

set splitbelow                  " Splitting a window will put the new window below the current one
set splitright                  " Splitting a window will put the new windowright the current one

" Load matchit.vim, but only if the user hasn't installed a newer version.
runtime! macros/matchit.vim

" CTRL-V: Paste from clipboard
cnoremap <C-V> <C-R>+
set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)

set tabpagemax=15

set showmode                    " Display the current mode

highlight clear SignColumn      " SignColumn should match background
highlight Comment cterm=italic  " make comments in code to be italic

set ruler                   " Show the ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
set showcmd
set laststatus=2
set statusline=%<%f\
set statusline+=%w%h%m%r
set statusline+=\ [%{&ff}/%Y]
set statusline+=\ [%{getcwd()}]
set statusline+=%=%-14.(%l,%c%V%)\ %p%%

set viminfo='1000,f1,<500

set linespace=0                 " No extra spaces between rows
set numberwidth=5               " Width of the line-no. column
set magic                       " Make regex a little easier to type

set noerrorbells

set winminheight=0              " Windows can be 0 line high
set wildmenu

set scrolljump=5                " How many lines to scroll at a time, make scrolling appears faster

set report=0
set updatecount=0
set updatetime=250             "Use a low updatetime. This is used by Cursorhold

highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

set autoindent
set smartindent

set nojoinspaces
nnoremap : ;
nnoremap ; :
nnoremap Y y$
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

inoremap <C-c> <Esc>

" " listchar=trail is not as flexible, use the below to highlight trailing whitespace
" func! ShowTrailingWS()
"     highlight ExtraWhitespace ctermbg=yellow guibg=yellow
"     match ExtraWhitespace /\s\+$/
" endfunc
" nnoremap <F6> :call ShowTrailingWS()<CR>

function! Preserve(command)
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    execute a:command
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction 

nmap _$ :call Preserve("%s/\\s\\+$//e")<CR>
nmap _= :call Preserve("normal gg=G")<CR>

"Remove all trailing whitespace by pressing F7
"nnoremap <F7> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

"define BadWhitespace before using in a match
highlight BadWhitespace ctermbg=red guibg=darkred
" Syntax of these languages is fussy over tabs Vs spaces
autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType c,cpp :set cindent
autocmd FileType markdown setlocal spell
autocmd FileType gitcommit setlocal spell
autocmd FileType python nnoremap <buffer> <F9> :exec '!clear;python' shellescape(@%, 1)<cr>
autocmd BufEnter * silent! normal! g`"
" Treat .rss files as XML
autocmd BufNewFile,BufRead *.rss setfiletype xml
" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =
au BufNewFile,BufRead *.py "(PEP8 indentation)
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/ "We can have VIM flag that for us so that it’s easy to spot – and then remove.
